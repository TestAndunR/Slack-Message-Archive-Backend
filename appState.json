{
  "EDITOR_STATE": {
    "allProjectFiles": {
      "59117187-76a7-4e3d-b0d1-e3dcc3f6d16c": {
        "id": "59117187-76a7-4e3d-b0d1-e3dcc3f6d16c",
        "parent": null,
        "name": "slack_api",
        "type": "DIRECTORY",
        "isDirectory": true,
        "children": [
          "0a0b87a8-60b8-4743-8624-c874ecc33c0a",
          "4f9c646d-0a42-4509-ad47-8713fc21f862"
        ],
        "isRemovable": false,
        "filePath": "slack_api"
      },
      "0a0b87a8-60b8-4743-8624-c874ecc33c0a": {
        "id": "0a0b87a8-60b8-4743-8624-c874ecc33c0a",
        "parent": "59117187-76a7-4e3d-b0d1-e3dcc3f6d16c",
        "name": "lambda.js",
        "type": "LAMBDA_FILE",
        "isDirectory": false,
        "children": [],
        "isRemovable": true,
        "filePath": "slack_api/lambda.js",
        "code": "let AWS = require('aws-sdk');\nconst ddb = new AWS.DynamoDB.DocumentClient();\nconst axios = require('axios');\n\nexports.handler = function (event, context, callback) {\n    if (event.challenge) {\n        callback(null, { \"challenge\": event.challenge });\n        return;\n    }\n    console.log(event);\n    let messageId = event.event.client_msg_id;\n    let message = event.event.text;\n    let senderId = event.event.user;\n    let timestamp = event.event.ts\n    console.log(env.process.slack_token);\n    axios.get(\"https://slack.com/api/users.list?token=\"+process.env.slack_token)\n        .then(data => console.log(data))\n        .catch(err => console.log(err))\n    ddb.put({\n        TableName: 'slack_messages',\n        Item: { 'message_id': messageId, 'message': message, 'sender_Id': senderId, 'timestamp': timestamp }\n    }).promise().then(function (data) {\n        //your logic goes here\n        console.log(data);\n    }).catch(function (err) {\n        //handle error\n        console.log(err)\n    });\n\n\n    callback(null, { \"message\": \"Success\" })\n}",
        "triggers": [
          {
            "resourceName": "apigusEast1slackapiany",
            "config": {}
          }
        ],
        "config": {
          "runtime": "nodejs8.10",
          "handler": "handler",
          "timeout": 60,
          "memory": 128,
          "layers": []
        },
        "testCases": {
          "f84c67a1-c659-46e5-9f4a-dea05681268c": {
            "id": "f84c67a1-c659-46e5-9f4a-dea05681268c",
            "name": "Unnamed event",
            "functionId": "0a0b87a8-60b8-4743-8624-c874ecc33c0a",
            "event": "{\n    \"text\": \"test\"\n}"
          }
        }
      },
      "4f9c646d-0a42-4509-ad47-8713fc21f862": {
        "id": "4f9c646d-0a42-4509-ad47-8713fc21f862",
        "parent": "59117187-76a7-4e3d-b0d1-e3dcc3f6d16c",
        "name": "getText.js",
        "type": "LAMBDA_FILE",
        "isDirectory": false,
        "children": [],
        "isRemovable": true,
        "filePath": "slack_api/getText.js",
        "code": "let AWS = require('aws-sdk');\nconst ddb = new AWS.DynamoDB.DocumentClient();\n\nexports.handler = function (event, context, callback) {\n\n    let text = event.queryStringParameters.text;\n    console.log(text);\n\n    ddb.scan({\n        TableName: 'slack_messages',\n        ExpressionAttributeValues: {\n            ':text': text\n        },\n        FilterExpression: \"contains(message, :text)\"\n    }).promise().then(function (data) {\n        //your logic goes here\n        console.log(data);\n        let reponse = {\n            \"isBase64Encoded\": true,\n            \"statusCode\": 200,\n            \"headers\": {\n                \"Access-Control-Allow-Origin\": \"*\",\n                \"Access-Control-Allow-Methods\": \"*\"\n            },\n            \"body\": JSON.stringify(data.Items)\n        }\n        callback(null, reponse)\n    }).catch(function (err) {\n        //handle error\n        console.log(err);\n        let response = {\n            \"isBase64Encoded\": true,\n            \"statusCode\": 502,\n            \"headers\": {\n                \"Access-Control-Allow-Origin\": \"*\",\n                \"Access-Control-Allow-Methods\": \"*\"\n            },\n            \"body\": JSON.stringify({\"err\":\"data not found\"})\n        }\n    });\n}",
        "triggers": [
          {
            "resourceName": "apigusEast1slackapichatsget",
            "config": {}
          }
        ],
        "config": {
          "runtime": "nodejs8.10",
          "handler": "handler",
          "timeout": 60,
          "memory": 128,
          "layers": []
        },
        "testCases": {
          "39cdd127-c839-4d1c-a890-9815fd84ed6d": {
            "id": "39cdd127-c839-4d1c-a890-9815fd84ed6d",
            "name": "Unnamed event",
            "functionId": "4f9c646d-0a42-4509-ad47-8713fc21f862",
            "event": "{\n    \"text\":\"test\"\n}"
          }
        }
      }
    },
    "deletedFiles": [],
    "rootNode": "59117187-76a7-4e3d-b0d1-e3dcc3f6d16c",
    "openFiles": [
      "0a0b87a8-60b8-4743-8624-c874ecc33c0a",
      "4f9c646d-0a42-4509-ad47-8713fc21f862"
    ],
    "currentFileId": "0a0b87a8-60b8-4743-8624-c874ecc33c0a",
    "resources": {
      "apigusEast1slackapiany": {
        "name": "apigusEast1slackapiany",
        "type": "API_GATEWAY",
        "config": {
          "selectedRegion": "us-east-1",
          "apiMode": 0,
          "apiName": "slack_api",
          "endpointType": "EDGE",
          "resourceMode": 0,
          "resourceName": "",
          "resourcePath": "/",
          "restMethod": "ANY",
          "proxyIntegration": false,
          "enableCORS": false,
          "stageMode": 0,
          "stageName": "prod"
        },
        "globallyEditable": false
      },
      "ddbslackmessages": {
        "name": "ddbslackmessages",
        "type": "DynamoDB",
        "config": {
          "mode": 0,
          "operation": "scan",
          "table": {
            "arn": "",
            "name": "slack_messages",
            "partitionKey": "message_id",
            "partitionKeyType": "S",
            "hasSortKey": false,
            "sortKey": "",
            "sortKeyType": "S",
            "mode": 0
          },
          "parameters": {
            "TableName": "slack_messages",
            "ExpressionAttributeValues": {
              ":text": "@{text}"
            },
            "FilterExpression": "message = :"
          },
          "triggerParams": {},
          "validator": {
            "validatableFields": {},
            "validity": true
          },
          "valid": true
        },
        "globallyEditable": false
      },
      "apigusEast1slackapichatsget": {
        "name": "apigusEast1slackapichatsget",
        "type": "API_GATEWAY",
        "config": {
          "selectedRegion": "us-east-1",
          "apiMode": 0,
          "apiName": "slack_api",
          "endpointType": "EDGE",
          "resourceMode": 0,
          "resourceName": "chats",
          "resourcePath": "/chats",
          "restMethod": "GET",
          "proxyIntegration": true,
          "enableCORS": true,
          "stageMode": 0,
          "stageName": "prod"
        },
        "globallyEditable": false
      }
    },
    "customTemplate": {
      "dialect": null,
      "definitions": {}
    },
    "envVariables": [
      {
        "lambdaId": "all",
        "varKey": "SIGMA_AWS_ACC_ID",
        "varValue": null,
        "shouldPersist": false,
        "displayOnly": false,
        "editable": false
      },
      {
        "lambdaId": "all",
        "varKey": "slack_token",
        "varValue": null,
        "shouldPersist": false,
        "displayOnly": false,
        "editable": true
      }
    ],
    "packageJSON": {
      "dependencies": {
        "aws-sdk": {
          "name": "aws-sdk",
          "version": "2.176.0",
          "dev": true,
          "notRemovable": false
        },
        "axios": {
          "name": "axios",
          "version": "0.18.0"
        }
      }
    }
  },
  "PROJECT_META": {
    "projectName": "slack_api",
    "projectDescription": "",
    "projectVersion": "1.0.0",
    "projectRegion": "us-east-1",
    "platform": "AWS",
    "platformRegions": {},
    "lastSave": 1550732102014
  },
  "VCS_STATE": {
    "provider": "GitHub",
    "repo": {
      "name": "slack_api",
      "url": "https://github.com/TestAndunR/slack_api"
    }
  }
}